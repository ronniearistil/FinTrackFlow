{"ast":null,"code":"var _jsxFileName = \"/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/Components/ProjectForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectForm = ({\n  addProject\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [profit, setProfit] = useState('');\n  const [cost, setCost] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      name,\n      profit,\n      cost,\n      status\n    };\n    addProject(newProject);\n    setName('');\n    setProfit('');\n    setCost('');\n    setStatus('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Project Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: profit,\n      onChange: e => setProfit(e.target.value),\n      placeholder: \"Profit\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: cost,\n      onChange: e => setCost(e.target.value),\n      placeholder: \"Cost\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      placeholder: \"Status\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectForm, \"Wl/vdp4mQyRU18O8puzTzi7Su6g=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProjectForm","addProject","_s","name","setName","profit","setProfit","cost","setCost","status","setStatus","handleSubmit","e","preventDefault","newProject","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/Components/ProjectForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ProjectForm = ({ addProject }) => {\n  const [name, setName] = useState('');\n  const [profit, setProfit] = useState('');\n  const [cost, setCost] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newProject = { name, profit, cost, status };\n    addProject(newProject);\n    setName('');\n    setProfit('');\n    setCost('');\n    setStatus('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Project Name\" required />\n      <input type=\"number\" value={profit} onChange={(e) => setProfit(e.target.value)} placeholder=\"Profit\" required />\n      <input type=\"number\" value={cost} onChange={(e) => setCost(e.target.value)} placeholder=\"Cost\" required />\n      <input type=\"text\" value={status} onChange={(e) => setStatus(e.target.value)} placeholder=\"Status\" required />\n      <button type=\"submit\">Add Project</button>\n    </form>\n  );\n};\n\nexport default ProjectForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,UAAU,GAAG;MAAEX,IAAI;MAAEE,MAAM;MAAEE,IAAI;MAAEE;IAAO,CAAC;IACjDR,UAAU,CAACa,UAAU,CAAC;IACtBV,OAAO,CAAC,EAAE,CAAC;IACXE,SAAS,CAAC,EAAE,CAAC;IACbE,OAAO,CAAC,EAAE,CAAC;IACXE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACEX,OAAA;IAAMgB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3BjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEf,IAAK;MAACgB,QAAQ,EAAGP,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,cAAc;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH3B,OAAA;MAAOkB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEb,MAAO;MAACc,QAAQ,EAAGP,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,QAAQ;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH3B,OAAA;MAAOkB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEX,IAAK;MAACY,QAAQ,EAAGP,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,MAAM;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1G3B,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAET,MAAO;MAACU,QAAQ,EAAGP,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,QAAQ;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9G3B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAACxB,EAAA,CAzBIF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}