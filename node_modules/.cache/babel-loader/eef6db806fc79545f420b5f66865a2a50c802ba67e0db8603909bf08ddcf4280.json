{"ast":null,"code":"var _jsxFileName = \"/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/ProjectContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContext = /*#__PURE__*/createContext();\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5001/projects').then(res => res.json()).then(data => setProjects(data)).catch(err => console.error('Error fetching projects:', err));\n  }, []);\n  const addProject = newProject => {\n    fetch('http://localhost:5001/projects', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newProject)\n    }).then(res => res.json()).then(data => setProjects([...projects, data])).catch(err => console.error('Error adding project:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      projects,\n      addProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectProvider, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectProvider;\nexport default ProjectContext;\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ProjectContext","ProjectProvider","children","_s","projects","setProjects","fetch","then","res","json","data","catch","err","console","error","addProject","newProject","method","headers","body","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/ProjectContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst ProjectContext = createContext();\n\nexport const ProjectProvider = ({ children }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5001/projects')\n      .then((res) => res.json())\n      .then((data) => setProjects(data))\n      .catch((err) => console.error('Error fetching projects:', err));\n  }, []);\n\n  const addProject = (newProject) => {\n    fetch('http://localhost:5001/projects', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newProject),\n    })\n      .then((res) => res.json())\n      .then((data) => setProjects([...projects, data]))\n      .catch((err) => console.error('Error adding project:', err));\n  };\n\n  return (\n    <ProjectContext.Provider value={{ projects, addProject }}>\n      {children}\n    </ProjectContext.Provider>\n  );\n};\n\nexport default ProjectContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAIC,UAAU,IAAK;IACjCV,KAAK,CAAC,gCAAgC,EAAE;MACtCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;IACjC,CAAC,CAAC,CACCT,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,IAAI,CAAC,CAAC,CAAC,CAChDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,oBACEb,OAAA,CAACC,cAAc,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,QAAQ;MAAEW;IAAW,CAAE;IAAAb,QAAA,EACtDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACxB,EAAA,CA1BWF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AA4B5B,eAAeD,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}