{"ast":null,"code":"var _jsxFileName = \"/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/Components/ProjectContext.jsx\",\n  _s = $RefreshSig$();\n// ProjectContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectContext = /*#__PURE__*/createContext();\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [expenses, setExpenses] = useState([]); // Initialized as empty array\n\n  useEffect(() => {\n    fetch('http://localhost:5001/projects').then(res => res.json()).then(data => setProjects(data)).catch(error => console.error('Error fetching projects:', error));\n    fetch('http://localhost:5001/expenses').then(res => res.json()).then(data => setExpenses(data)).catch(error => console.error('Error fetching expenses:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      projects,\n      expenses\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectProvider, \"xf87Ch3Ybs+OpCOlmjytUXC6mus=\");\n_c = ProjectProvider;\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ProjectContext","ProjectProvider","children","_s","projects","setProjects","expenses","setExpenses","fetch","then","res","json","data","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronyaristil/Development/code/Phase-2/ProjFlow/src/Components/ProjectContext.jsx"],"sourcesContent":["// ProjectContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const ProjectContext = createContext();\n\nexport const ProjectProvider = ({ children }) => {\n  const [projects, setProjects] = useState([]);\n  const [expenses, setExpenses] = useState([]); // Initialized as empty array\n\n  useEffect(() => {\n    fetch('http://localhost:5001/projects')\n      .then((res) => res.json())\n      .then((data) => setProjects(data))\n      .catch((error) => console.error('Error fetching projects:', error));\n\n    fetch('http://localhost:5001/expenses')\n      .then((res) => res.json())\n      .then((data) => setExpenses(data))\n      .catch((error) => console.error('Error fetching expenses:', error));\n  }, []);\n\n  return (\n    <ProjectContext.Provider value={{ projects, expenses }}>\n      {children}\n    </ProjectContext.Provider>\n  );\n};\n\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,WAAW,CAACO,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IAErEN,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACC,cAAc,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,QAAQ;MAAEE;IAAS,CAAE;IAAAJ,QAAA,EACpDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAClB,EAAA,CArBWF,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}